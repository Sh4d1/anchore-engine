# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class TriggerParamSpec(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, description=None, validator=None, validator_description=None):
        """
        TriggerParamSpec - a model defined in Swagger

        :param name: The name of this TriggerParamSpec.
        :type name: str
        :param description: The description of this TriggerParamSpec.
        :type description: str
        :param validator: The validator of this TriggerParamSpec.
        :type validator: str
        :param validator_description: The validator_description of this TriggerParamSpec.
        :type validator_description: str
        """
        self.swagger_types = {
            'name': str,
            'description': str,
            'validator': str,
            'validator_description': str
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'validator': 'validator',
            'validator_description': 'validator_description'
        }

        self._name = name
        self._description = description
        self._validator = validator
        self._validator_description = validator_description

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TriggerParamSpec of this TriggerParamSpec.
        :rtype: TriggerParamSpec
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self):
        """
        Gets the name of this TriggerParamSpec.

        :return: The name of this TriggerParamSpec.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this TriggerParamSpec.

        :param name: The name of this TriggerParamSpec.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this TriggerParamSpec.

        :return: The description of this TriggerParamSpec.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this TriggerParamSpec.

        :param description: The description of this TriggerParamSpec.
        :type description: str
        """

        self._description = description

    @property
    def validator(self):
        """
        Gets the validator of this TriggerParamSpec.

        :return: The validator of this TriggerParamSpec.
        :rtype: str
        """
        return self._validator

    @validator.setter
    def validator(self, validator):
        """
        Sets the validator of this TriggerParamSpec.

        :param validator: The validator of this TriggerParamSpec.
        :type validator: str
        """

        self._validator = validator

    @property
    def validator_description(self):
        """
        Gets the validator_description of this TriggerParamSpec.

        :return: The validator_description of this TriggerParamSpec.
        :rtype: str
        """
        return self._validator_description

    @validator_description.setter
    def validator_description(self, validator_description):
        """
        Sets the validator_description of this TriggerParamSpec.

        :param validator_description: The validator_description of this TriggerParamSpec.
        :type validator_description: str
        """

        self._validator_description = validator_description

